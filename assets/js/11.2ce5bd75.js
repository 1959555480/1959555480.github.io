(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{358:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("h2",{attrs:{id:"javascript-基本数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-基本数据类型"}},[t._v("#")]),t._v(" JavaScript 基本数据类型")]),t._v(" "),e("ul",[e("li",[t._v("7种 String Number Boolen Null undefined Symbol(唯一值) BigInt")])]),t._v(" "),e("h2",{attrs:{id:"null-undefined"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#null-undefined"}},[t._v("#")]),t._v(" null == undefined ?")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("true")])]),t._v(" "),e("li",[t._v("null 表示没有对象，即此处不应该有值")]),t._v(" "),e("li",[t._v("undefined 表示缺少值，就是此处应该有值，但是还没有定义")])]),t._v(" "),e("h2",{attrs:{id:"json转对象再转回来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json转对象再转回来"}},[t._v("#")]),t._v(" JSON转对象再转回来")]),t._v(" "),e("ul",[e("li",[t._v("JSON.stringify() 方法将一个 JavaScript 值（对象或者数组）转换为一个 JSON 字符串")]),t._v(" "),e("li",[t._v("JSON.parse() 方法用来解析 JSON 字符串，构造由字符串描述的 JavaScript 值或者对象")])]),t._v(" "),e("h2",{attrs:{id:"document-和-window对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#document-和-window对象"}},[t._v("#")]),t._v(" document 和 window对象")]),t._v(" "),e("h2",{attrs:{id:"什么是事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件循环"}},[t._v("#")]),t._v(" 什么是事件循环")]),t._v(" "),e("ul",[e("li",[t._v("同步和异步任务分别进入不同的执行场所，同步的进入主线程，异步的进入Event Table并且注册函数")]),t._v(" "),e("li",[t._v("当指定的事情完成时，Event Table会将这个函数移入Event Queue")]),t._v(" "),e("li",[t._v("主线程内的任务执行完毕为空，回去Event Queue读取对应的函数，进入主线程执行")]),t._v(" "),e("li",[t._v("上述过程会不断重复，也就时常说的Event Loop")])]),t._v(" "),e("h2",{attrs:{id:"async-await"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async await")]),t._v(" "),e("blockquote",[e("p",[t._v("https://segmentfault.com/a/1190000017224799")])]),t._v(" "),e("ul",[e("li",[t._v("如果async关键字函数返回的不是promise,会自动用Promise.resolve()包装")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("async function a(){\n  return 123\n}\nconsole.log(a()) //Promise { 123 }\n")])])]),e("ul",[e("li",[t._v("在语义上，async表示函数内部有异步操作")]),t._v(" "),e("li",[t._v("await 关键字要再async关键字函数内部，await写外面会报错")])]),t._v(" "),e("h2",{attrs:{id:"匿名函数使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数使用场景"}},[t._v("#")]),t._v(" 匿名函数使用场景")]),t._v(" "),e("h2",{attrs:{id:"闭包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),e("ul",[e("li",[t._v("闭包就是函数内部定义的函数，被返回了出去并在外部调用")])]),t._v(" "),e("h2",{attrs:{id:"原型链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),e("ul",[e("li",[t._v("Object."),e("strong",[t._v("proto")]),t._v(" === Function.prototype;")]),t._v(" "),e("li",[t._v("Function.prototype."),e("strong",[t._v("proto")]),t._v(" === Object.prototype;")]),t._v(" "),e("li",[t._v("Object.prototype."),e("strong",[t._v("proto")]),t._v(" === null;")])]),t._v(" "),e("h2",{attrs:{id:"防抖-节流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防抖-节流"}},[t._v("#")]),t._v(" 防抖 节流")])])}),[],!1,null,null,null);a.default=r.exports}}]);