(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{370:function(t,e,o){"use strict";o.r(e);var s=o(42),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"浏览器相关"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[t._v("#")]),t._v(" 浏览器相关")]),t._v(" "),o("h2",{attrs:{id:"两个标签页之间通信"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#两个标签页之间通信"}},[t._v("#")]),t._v(" 两个标签页之间通信")]),t._v(" "),o("ul",[o("li",[t._v("可以使用 LocalStorage")]),t._v(" "),o("li",[t._v("window.onstorage = (e) => {console.log(e)} // 或者这样 window.addEventListener('storage', (e) => console.log(e))")]),t._v(" "),o("li",[t._v("onstorage以及storage事件，针对都是非当前页面对localStorage进行修改时才会触发，当前页面修改localStorage不会触发监听函数。然后就是在对原有的数据的值进行修改时才会触发，比如原本已经有一个key会a值为b的localStorage，你再执行：localStorage.setItem('a', 'b')代码，同样是不会触发监听函数的")])]),t._v(" "),o("h2",{attrs:{id:"浏览器内核"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("浏览器")]),t._v(" "),o("th",[t._v("内核")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("IE -> Edge")]),t._v(" "),o("td",[t._v("trident->EdgeHTML")])]),t._v(" "),o("tr",[o("td",[t._v("Chrome")]),t._v(" "),o("td",[t._v("webkit->blink")])]),t._v(" "),o("tr",[o("td",[t._v("Safari")]),t._v(" "),o("td",[t._v("webkit")])]),t._v(" "),o("tr",[o("td",[t._v("Firefox")]),t._v(" "),o("td",[t._v("Gecko")])]),t._v(" "),o("tr",[o("td",[t._v("Opera")]),t._v(" "),o("td",[t._v("Presto->blink")])])])]),t._v(" "),o("h2",{attrs:{id:"cookie、session、sessionstorage、localstorage的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie、session、sessionstorage、localstorage的区别"}},[t._v("#")]),t._v(" cookie、session、sessionStorage、localStorage的区别")]),t._v(" "),o("h3",{attrs:{id:"cookie-和-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session"}},[t._v("#")]),t._v(" cookie 和 session")]),t._v(" "),o("ul",[o("li",[t._v("cookie 存储在浏览器 session存储在服务器端")]),t._v(" "),o("li",[t._v("cookie 安全性相比 session 弱")]),t._v(" "),o("li",[t._v("cookie 存储容量不能超过4k ，session默认大小为1024k")])]),t._v(" "),o("h3",{attrs:{id:"cookie-sessionstorage-和-localstorage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-sessionstorage-和-localstorage"}},[t._v("#")]),t._v(" cookie sessionStorage 和 localStorage")]),t._v(" "),o("h4",{attrs:{id:"共同点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#共同点"}},[t._v("#")]),t._v(" 共同点")]),t._v(" "),o("ul",[o("li",[t._v("都存储在浏览器端 同源")])]),t._v(" "),o("h4",{attrs:{id:"区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),o("ul",[o("li",[t._v("cookie数据始终在同源的http请求中携带，而webStorage不会在请求中携带，仅仅在本地存储")]),t._v(" "),o("li",[t._v("存储大小区别：cookie是4k，webStorage可以达到5M或者更大")]),t._v(" "),o("li",[t._v("数据有效期区别：cookie只在设置的cookie过期时间之前一直有效，而sessionStorage是会话级别的存储，它只在当前浏览器关闭前有效；localStorage始终有效，除非用户手动删除才会失效")])])])}),[],!1,null,null,null);e.default=a.exports}}]);